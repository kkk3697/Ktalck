{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Form,Button,Row,Col,Modal}from'react-bootstrap';import'../style/signup.css';import axios from'axios';import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[searchTerm,setSearchTerm]=useState(\"\");const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const[countryCodes,setCountryCodes]=useState([]);const[isCheckboxChecked,setIsCheckboxChecked]=useState(false);//박스 상태 확인\nconst[isCheckboxEnabled,setIsCheckboxEnabled]=useState(false);//체크 상태 확인\nconst[timezones,setTimezones]=useState([]);const[showModal,setShowModal]=useState(false);const[selectedCountry,setSelectedCountry]=useState({value:'',label:'-- select --'});const[selectedOption,setSelectedOption]=useState({value:'82',// 한국의 국가 코드\nlabel:'(82) Korea'});const options=countryCodes.map(codeInfo=>({value:codeInfo.callingCode,label:\"(\".concat(codeInfo.callingCode,\") \").concat(codeInfo.name)}));const countryOptions=countryCodes.map(codeInfo=>({value:codeInfo.name,// 실제 값\nlabel:codeInfo.name// 보여지는 값\n}));const openPopup=()=>{if(!isCheckboxEnabled){// 체크가 안 된 상태에서만 모달 띄우기\nsetShowModal(true);}};const handleCheckboxClick=()=>{// 체크박스가 아직 체크되지 않았을 경우에만 모달창을 띄워준다.\nif(!isCheckboxEnabled){setShowModal(true);}else{// 이미 체크가 되어 있다면, 체크를 해제한다.\nsetIsCheckboxChecked(false);setIsCheckboxEnabled(false);}};const handleAgree=()=>{setIsCheckboxEnabled(true);// 체크박스를 활성화시킨다.\nsetIsCheckboxChecked(true);// 체크박스를 체크 상태로 만든다.\nsetShowModal(false);// 모달을 닫는다.\n};const handleCancel=()=>{setIsCheckboxChecked(false);// 체크박스를 체크 해제 상태로 만든다.\nsetShowModal(false);// 모달을 닫는다.\n};const SignupPopup=_ref=>{let{show,onHide,onAgree,onCancel}=_ref;return/*#__PURE__*/_jsxs(Modal,{show:show,onHide:onHide,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"STUDENT RULES\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"div\",{id:\"scrollBox\",children:/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"K-talk LIVE has a Xorean Only* policy. Students must speak Korean while they are within the classes except in special circumstances.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students must attend more than three fifths of the classes, otherwise, they will be asked to dismiss from the online class.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students wishing to take an extended holiday or leave of absence must receive written authorization from their teachers.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"If the student has been absent for more than 10 consecutive sessions, the student will be dismissed from the course.\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\" Students are expected to act in accordance with the following Student Code of Conduct These are for eliminating stress, preventing initial problems and creating a safe environment for all. Students who broke any of these rules will be given at least 1 verbal and 1 written warning. If the wrong behavior continues, the student may be considered to be expelled.\",/*#__PURE__*/_jsxs(\"ul\",{className:\"sub-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Participate in class, take all competency checks, exams and complete all projects\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Attend class regularly. Dressed appropriately and ready to learn.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students who access to the class more than 10 minutes after the start of class are considered absent and may not enter the classroom.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students are asked to inform their teacher of any changes in their study plans.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students must respect teachers and other students. Bullying, discrimination [e.g. race, religion, sexual orientation and gender] and abuse in any form will not be tolerated and may lead to dismissal,\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students are required to turn on audio / video functions during the class. If students do not keep their audio/video on, they may be asked to leave the class by teachers.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students are asked to maintain their background environment quiet for a class. Depending on the severity of the noise from the side of students, they may receive a warning from the teacher and their audio can be turned off by the teacher.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students are requested to acquaint themselves with Zoom and Google Classroom before starting courses.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students are required to complete their homework and hand it in PDF or JPG file format.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Students can ask personal questions only on the chatting line or through classroom messenger.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Any kind of photo/video shooting or recording of the class is not allowed.\"})]})]})]})})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onCancel,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:onAgree,children:\"\\uB3D9\\uC758\"})]})]});};useEffect(()=>{// 국가 코드를 불러오는 함수\nasync function fetchCountryCodes(){try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/countryCodes\"));const countryNames=response.data.map(item=>item.name);setCountryCodes(response.data);}catch(error){console.error(\"API 호출 중 에러 발생:\",error);}}async function fetchTimezones(){try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/timezones\"));setTimezones(response.data);}catch(error){console.error(\"API 호출 중 에러 발생:\",error);}}window.addEventListener('message',messageListener);fetchCountryCodes();fetchTimezones();return()=>{// 컴포넌트 unmount 될 때 이벤트 리스너 해제\nwindow.removeEventListener('message',messageListener);};},[]);const messageListener=event=>{if(event.data==='agreed'){setIsCheckboxEnabled(true);}};const[formData,setFormData]=useState({firstName:'',lastName:'',email:'',birthYear:'',birthMonth:'',birthDay:'',country_code:'',language:'',nationality:'',phone_number:'',currentCity:'',timezones:[]});const handleChange=e=>{const{name,value,type,checked}=e.target;if(type===\"checkbox\"){setFormData(prevState=>{let updatedTimezones=prevState[name]||[];// 이미 체크된 값이 있다면 가져오고, 없으면 빈 배열\nif(checked){updatedTimezones.push(value);// 체크했다면 추가\nconsole.log(\"Updated state:\",formData);}else{updatedTimezones=updatedTimezones.filter(item=>item!==value);// 체크 해제했다면 제거\n}return{...prevState,[name]:updatedTimezones};});}else{setFormData(prevState=>({...prevState,[name]:value}));}};// 폼을 제출하는 함수\nconst handleSubmit=async e=>{e.preventDefault();const currentYear=new Date().getFullYear();const minYear=1900;if(formData.birthYear<minYear||formData.birthYear>currentYear){alert(\"유효한 생년을 입력해주세요.\");return;}if(formData.birthMonth<1||formData.birthMonth>12){alert(\"유효한 월을 입력해주세요.\");return;}if(formData.birthDay<1||formData.birthDay>31){alert(\"유효한 일을 입력해주세요.\");return;}// 국가 검사\nconst isValidCountry=countryOptions.some(option=>option.value===formData.nationality);if(!isValidCountry){alert(\"유효한 국가를 선택해주세요.\");return;}if(isCheckboxChecked){const newFormData={...formData,email:formData.email,birthYear:formData.birthYear,birthMonth:formData.birthMonth,birthDay:formData.birthDay,country:selectedCountry,language:formData.language,phone_number:formData.phone_number,timezone:formData.timezones,country_code:selectedOption?selectedOption.value:'',currentCity:formData.currentCity,firstName:formData.firstName,lastName:formData.lastName,nationality:formData.nationality};try{// 서버로 POST 요청\nconst response=await axios.post(\"\".concat(API_BASE_URL,\"/signup\"),newFormData);if(response.status===200){console.log('Application submitted:',response.data);console.log(new FormData());// 서버로부터 받은 메시지를 알림으로 띄우고 페이지 리다이렉션\nalert(response.data.message);if(response.data.redirect){window.location.href=response.data.redirect;}}}catch(error){console.error('error:',error);if(error.response&&error.response.status===409){alert('Email already exists.');}else{console.error('error:',error);}}}else{alert('Please agree to the Terms of Use.');}};return/*#__PURE__*/_jsxs(Container,{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Application Form\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{children:\"for K-talk Live regular paid Korean lessons\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\xB7Please complete and submit this form so that teachers can contact you for the next step.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\xB7If you'd like to apply for our Free Hangeul Lessons, please exit this page and visit our website at\",/*#__PURE__*/_jsx(\"br\",{}),\"http://ktalklive.com or our FB page at https://www.facebook.com/ktalklive\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Thank you very much!\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Name in full (First/Last):\"}),/*#__PURE__*/_jsx(Col,{sm:\"5\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"First Name\",name:\"firstName\",value:formData.firstName,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(Col,{sm:\"5\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Last Name\",name:\"lastName\",value:formData.lastName,onChange:handleChange,required:true})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Email Address\"}),/*#__PURE__*/_jsx(Col,{sm:\"10\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Address@gmail.com\",name:\"email\",value:formData.email,onChange:handleChange,required:true})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Date of Birth:\"}),/*#__PURE__*/_jsx(Col,{sm:\"10\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",list:\"birthYears\",name:\"birthYear\",className:\"form-control\",placeholder:\"Year\",required:true,onChange:handleChange,style:{width:\"100px\",marginRight:\"10px\"}}),/*#__PURE__*/_jsx(\"datalist\",{id:\"birthYears\",children:[...Array(61).keys()].map(i=>i+1950).map(year=>/*#__PURE__*/_jsx(\"option\",{value:year},year))}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",list:\"birthMonths\",name:\"birthMonth\",className:\"form-control\",placeholder:\"Month\",required:true,onChange:handleChange,style:{width:\"100px\",marginRight:\"10px\"}}),/*#__PURE__*/_jsx(\"datalist\",{id:\"birthMonths\",children:[...Array(12).keys()].map(i=>i+1).map(Month=>/*#__PURE__*/_jsx(\"option\",{value:Month},Month))}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",list:\"birthDays\",name:\"birthDay\",className:\"form-control\",placeholder:\"Day\",required:true,onChange:handleChange,style:{width:\"100px\"}}),/*#__PURE__*/_jsx(\"datalist\",{id:\"birthDays\",children:[...Array(31).keys()].map(i=>i+1).map(Day=>/*#__PURE__*/_jsx(\"option\",{value:Day},Day))})]})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Nationality\"}),/*#__PURE__*/_jsx(Col,{sm:\"10\",children:/*#__PURE__*/_jsx(Select,{options:countryOptions,isSearchable:true,value:selectedCountry,onChange:option=>{setSelectedCountry(option);setFormData({...formData,nationality:option?option.value:''});}})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Language you use:\"}),/*#__PURE__*/_jsx(Col,{sm:\"10\",children:/*#__PURE__*/_jsx(Form.Control,{as:\"input\",list:\"language\",name:\"language\",placeholder:\"Up to 3 languages\",onChange:handleChange,required:true})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(Form.Label,{column:true,sm:\"2\",children:\"Phone number\"}),/*#__PURE__*/_jsx(Col,{sm:\"10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"phone-container \",children:[/*#__PURE__*/_jsx(Select,{options:options,isSearchable:true,value:selectedOption,onChange:handleChange,className:\"mb-2 phone_code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"phone_number\",className:\"form-control mb-3\",onChange:handleChange,required:true})]})})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Row,className:\"form-group\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Please choose your available class hours in your local time.\"}),/*#__PURE__*/_jsx(Form.Group,{className:\"timezone-container\",children:timezones.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"timezone-row\",children:row.map((timezone,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"timezone-item\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:timezone,name:\"timezones\",value:timezone,label:timezone,onChange:handleChange})},index))},rowIndex))}),/*#__PURE__*/_jsx(Form.Label,{children:\"Please indicate your country of residence with states and city:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"currentCity\",placeholder:\"country / state / city\",onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column align-items-center add-margin\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Do you agree to the terms of our Student Rules?\"}),/*#__PURE__*/_jsx(Form.Check,{style:{marginTop:'20px'},type:\"checkbox\",label:\"Yes, I agree\",id:\"termsCheckbox\",onChange:handleCheckboxClick,checked:isCheckboxChecked})]}),/*#__PURE__*/_jsx(SignupPopup,{show:showModal,onHide:()=>setShowModal(false),onAgree:handleAgree,onCancel:handleCancel}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Submit application\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Row","Col","Modal","axios","Select","jsx","_jsx","jsxs","_jsxs","App","searchTerm","setSearchTerm","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","countryCodes","setCountryCodes","isCheckboxChecked","setIsCheckboxChecked","isCheckboxEnabled","setIsCheckboxEnabled","timezones","setTimezones","showModal","setShowModal","selectedCountry","setSelectedCountry","value","label","selectedOption","setSelectedOption","options","map","codeInfo","callingCode","concat","name","countryOptions","openPopup","handleCheckboxClick","handleAgree","handleCancel","SignupPopup","_ref","show","onHide","onAgree","onCancel","children","Header","closeButton","Title","Body","id","className","Footer","variant","onClick","fetchCountryCodes","response","get","countryNames","data","item","error","console","fetchTimezones","window","addEventListener","messageListener","removeEventListener","event","formData","setFormData","firstName","lastName","email","birthYear","birthMonth","birthDay","country_code","language","nationality","phone_number","currentCity","handleChange","e","type","checked","target","prevState","updatedTimezones","push","log","filter","handleSubmit","preventDefault","currentYear","Date","getFullYear","minYear","alert","isValidCountry","some","option","newFormData","country","timezone","post","status","FormData","message","redirect","location","href","onSubmit","Group","as","Label","column","sm","Control","placeholder","onChange","required","style","display","list","width","marginRight","Array","keys","i","year","Month","Day","isSearchable","row","rowIndex","index","Check","marginTop"],"sources":["C:/Users/jklc/Desktop/KTALK/front/src/pages/componetes/signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Row, Col, Modal } from 'react-bootstrap';\r\nimport '../style/signup.css';\r\n\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\nconst App = () => {\r\nconst [searchTerm, setSearchTerm] = useState(\"\"); \r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst [countryCodes, setCountryCodes] = useState([]);\r\nconst [isCheckboxChecked, setIsCheckboxChecked] = useState(false);//박스 상태 확인\r\nconst [isCheckboxEnabled, setIsCheckboxEnabled] = useState(false);//체크 상태 확인\r\nconst [timezones, setTimezones] = useState([]);\r\nconst [showModal, setShowModal] = useState(false);  \r\nconst [selectedCountry, setSelectedCountry] = useState({\r\n  value: '',\r\n  label: '-- select --'\r\n});\r\nconst [selectedOption, setSelectedOption] = useState({\r\n  value: '82',  // 한국의 국가 코드\r\n  label: '(82) Korea'\r\n});\r\nconst options = countryCodes.map(codeInfo => ({\r\n  value: codeInfo.callingCode,\r\n  label: `(${codeInfo.callingCode}) ${codeInfo.name}`,\r\n}));\r\nconst countryOptions = countryCodes.map(codeInfo => ({\r\n  value: codeInfo.name, // 실제 값\r\n  label: codeInfo.name // 보여지는 값\r\n}));\r\n\r\n  const openPopup = () => {\r\n    if (!isCheckboxEnabled) {  // 체크가 안 된 상태에서만 모달 띄우기\r\n      setShowModal(true);\r\n    }\r\n  };\r\n  const handleCheckboxClick = () => {\r\n    // 체크박스가 아직 체크되지 않았을 경우에만 모달창을 띄워준다.\r\n    if (!isCheckboxEnabled) {\r\n      setShowModal(true);\r\n    } else {\r\n      // 이미 체크가 되어 있다면, 체크를 해제한다.\r\n      setIsCheckboxChecked(false);\r\n      setIsCheckboxEnabled(false);\r\n    }\r\n  };\r\n  \r\n  const handleAgree = () => {\r\n    setIsCheckboxEnabled(true);  // 체크박스를 활성화시킨다.\r\n    setIsCheckboxChecked(true);  // 체크박스를 체크 상태로 만든다.\r\n    setShowModal(false);  // 모달을 닫는다.\r\n  };\r\n  \r\n  const handleCancel = () => {\r\n    setIsCheckboxChecked(false);  // 체크박스를 체크 해제 상태로 만든다.\r\n    setShowModal(false);  // 모달을 닫는다.\r\n  };\r\n  const SignupPopup = ({ show, onHide, onAgree, onCancel }) => (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>STUDENT RULES</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div id=\"scrollBox\">\r\n        <ol>\r\n            <li>K-talk LIVE has a Xorean Only* policy. Students must speak Korean while they are within the classes except in special circumstances.</li>\r\n            <li>Students must attend more than three fifths of the classes, otherwise, they will be asked to dismiss from the online class.</li>\r\n            <li>Students wishing to take an extended holiday or leave of absence must receive written authorization from their teachers.</li>\r\n            <li>If the student has been absent for more than 10 consecutive sessions, the student will be dismissed from the course.</li>\r\n            <li> Students are expected to act in accordance with the following Student Code of Conduct These are for eliminating stress, preventing initial problems and creating a safe environment for all. Students who broke any of these rules will be given at least 1 verbal and 1 written warning. If the wrong behavior continues, the student may be considered to be expelled.\r\n              <ul className=\"sub-list\">\r\n                <li>Participate in class, take all competency checks, exams and complete all projects</li>\r\n                <li>Attend class regularly. Dressed appropriately and ready to learn.</li>\r\n                <li>Students who access to the class more than 10 minutes after the start of class are considered absent and may not enter the classroom.</li>\r\n                <li>Students are asked to inform their teacher of any changes in their study plans.</li>\r\n                <li>Students must respect teachers and other students. Bullying, discrimination [e.g. race, religion, sexual orientation and gender] and abuse in any form will not be tolerated and may lead to dismissal,</li>\r\n                <li>Students are required to turn on audio / video functions during the class. If students do not keep their audio/video on, they may be asked to leave the class by teachers.</li>\r\n                <li>Students are asked to maintain their background environment quiet for a class. Depending on the severity of the noise from the side of students, they may receive a warning from the teacher and their audio can be turned off by the teacher.</li>\r\n                <li>Students are requested to acquaint themselves with Zoom and Google Classroom before starting courses.</li>\r\n                <li>Students are required to complete their homework and hand it in PDF or JPG file format.</li>\r\n                <li>Students can ask personal questions only on the chatting line or through classroom messenger.</li>\r\n                <li>Any kind of photo/video shooting or recording of the class is not allowed.</li>\r\n              </ul>\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onCancel}>\r\n          취소\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={onAgree}>\r\n          동의\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\nuseEffect(() => {\r\n  // 국가 코드를 불러오는 함수\r\n  async function fetchCountryCodes() {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/countryCodes`);\r\n      const countryNames = response.data.map(item => item.name);\r\n      setCountryCodes(response.data);\r\n    } catch (error) {\r\n      console.error(\"API 호출 중 에러 발생:\", error);\r\n    }\r\n  }\r\n  async function fetchTimezones() {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/timezones`);\r\n      setTimezones(response.data);\r\n    } catch (error) {\r\n      console.error(\"API 호출 중 에러 발생:\", error);\r\n    }\r\n  }\r\n\r\n  window.addEventListener('message', messageListener);\r\n  \r\n  fetchCountryCodes();\r\n  fetchTimezones();\r\n\r\n  return () => {\r\n    // 컴포넌트 unmount 될 때 이벤트 리스너 해제\r\n    window.removeEventListener('message', messageListener);\r\n  };\r\n}, []);\r\n\r\nconst messageListener = (event) => {\r\n  if (event.data === 'agreed') {\r\n    setIsCheckboxEnabled(true);\r\n  }\r\n};\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    birthYear: '',\r\n    birthMonth: '',\r\n    birthDay: '',\r\n    country_code: '',\r\n    language: '',\r\n    nationality: '',\r\n    phone_number: '',\r\n    currentCity: '',\r\n    timezones: []\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      setFormData((prevState) => {\r\n        let updatedTimezones = prevState[name] || [];  // 이미 체크된 값이 있다면 가져오고, 없으면 빈 배열\r\n        if (checked) {\r\n          updatedTimezones.push(value); // 체크했다면 추가\r\n          console.log(\"Updated state:\", formData);\r\n        } else {\r\n          updatedTimezones = updatedTimezones.filter(item => item !== value); // 체크 해제했다면 제거\r\n        }\r\n        return { ...prevState, [name]: updatedTimezones };\r\n      });\r\n    } else {\r\n      setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  \r\n  // 폼을 제출하는 함수\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const currentYear = new Date().getFullYear();\r\n    const minYear = 1900;\r\n    if (formData.birthYear < minYear || formData.birthYear > currentYear) {\r\n      alert(\"유효한 생년을 입력해주세요.\");\r\n      return;\r\n    }\r\n    \r\n    if (formData.birthMonth < 1 || formData.birthMonth > 12) {\r\n      alert(\"유효한 월을 입력해주세요.\");\r\n      return;\r\n    }\r\n    \r\n    if (formData.birthDay < 1 || formData.birthDay > 31) {\r\n      alert(\"유효한 일을 입력해주세요.\");\r\n      return;\r\n    }\r\n  \r\n    // 국가 검사\r\n    const isValidCountry = countryOptions.some(\r\n      (option) => option.value === formData.nationality\r\n    );\r\n    \r\n    if (!isValidCountry) {\r\n      alert(\"유효한 국가를 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (isCheckboxChecked) {\r\n      const newFormData = {\r\n        ...formData,\r\n        email: formData.email,\r\n        birthYear: formData.birthYear,\r\n        birthMonth: formData.birthMonth,\r\n        birthDay: formData.birthDay,\r\n        country: selectedCountry,\r\n        language: formData.language,\r\n        phone_number: formData.phone_number,\r\n        timezone: formData.timezones,\r\n        country_code: selectedOption ? selectedOption.value : '',\r\n        currentCity: formData.currentCity, \r\n        firstName: formData.firstName,  \r\n        lastName: formData.lastName,  \r\n        nationality: formData.nationality  \r\n      };\r\n  \r\n      try {\r\n        // 서버로 POST 요청\r\n        const response = await axios.post(`${API_BASE_URL}/signup`, newFormData);\r\n        if (response.status === 200) {\r\n          console.log('Application submitted:', response.data);\r\n          console.log(new FormData);\r\n          \r\n          // 서버로부터 받은 메시지를 알림으로 띄우고 페이지 리다이렉션\r\n          alert(response.data.message);\r\n          if (response.data.redirect) {\r\n            window.location.href = response.data.redirect;\r\n          }\r\n        } \r\n      } catch (error) {\r\n        console.error('error:', error);\r\n        if (error.response && error.response.status === 409) {\r\n          alert('Email already exists.');\r\n        } else {\r\n          console.error('error:', error);\r\n        }\r\n      }\r\n    } else {\r\n      alert('Please agree to the Terms of Use.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container className=\"container\">\r\n      <h1>Application Form</h1><br/>\r\n      <h2>for K-talk Live regular paid Korean lessons</h2>\r\n      <h4>·Please complete and submit this form so that teachers can contact you for the next step.\r\n          <br/>\r\n          ·If you'd like to apply for our Free Hangeul Lessons, please exit this page and visit our website at\r\n          <br/>    \r\n          http://ktalklive.com\r\n          or our FB page at \r\n          https://www.facebook.com/ktalklive<br/><br/>\r\n          Thank you very much!<br/></h4>\r\n  \r\n    <Form onSubmit={handleSubmit}>\r\n    <Form.Group as={Row} className=\"form-group\">\r\n    <Form.Label column sm=\"2\">\r\n      Name in full (First/Last):\r\n    </Form.Label>\r\n    <Col sm=\"5\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"First Name\"\r\n        name=\"firstName\"\r\n        value={formData.firstName}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </Col>\r\n    <Col sm=\"5\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Last Name\"\r\n        name=\"lastName\"\r\n        value={formData.lastName}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} className=\"form-group\">\r\n    <Form.Label column sm=\"2\">\r\n      Email Address\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control\r\n        type=\"email\"\r\n        placeholder=\"Address@gmail.com\"\r\n        name=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} className=\"form-group\">\r\n  <Form.Label column sm=\"2\">\r\n    Date of Birth:\r\n  </Form.Label>\r\n  <Col sm=\"10\">\r\n    <div style={{ display: \"flex\" }}>\r\n      <Form.Control \r\n        type=\"text\" \r\n        list=\"birthYears\" \r\n        name=\"birthYear\" \r\n        className=\"form-control\" \r\n        placeholder=\"Year\" \r\n        required \r\n        onChange={handleChange}\r\n        style={{width: \"100px\", marginRight: \"10px\"}}\r\n      />\r\n      <datalist id=\"birthYears\">\r\n        {[...Array(61).keys()].map(i => i + 1950).map(year => (\r\n          <option key={year} value={year} />\r\n        ))}\r\n      </datalist>\r\n      \r\n      <Form.Control \r\n        type=\"text\" \r\n        list=\"birthMonths\" \r\n        name=\"birthMonth\" \r\n        className=\"form-control\" \r\n        placeholder=\"Month\" \r\n        required \r\n        onChange={handleChange}\r\n        style={{width: \"100px\", marginRight: \"10px\"}}\r\n      />\r\n      <datalist id=\"birthMonths\">\r\n        {[...Array(12).keys()].map(i => i + 1).map(Month => (\r\n          <option key={Month} value={Month} />\r\n        ))}\r\n      </datalist>\r\n      \r\n      <Form.Control \r\n        type=\"text\" \r\n        list=\"birthDays\" \r\n        name=\"birthDay\" \r\n        className=\"form-control\" \r\n        placeholder=\"Day\" \r\n        required \r\n        onChange={handleChange}\r\n        style={{width: \"100px\"}}\r\n      />\r\n      <datalist id=\"birthDays\">\r\n        {[...Array(31).keys()].map(i => i + 1).map(Day => (\r\n          <option key={Day} value={Day} />\r\n        ))}\r\n        </datalist>\r\n    </div>\r\n  </Col>\r\n</Form.Group>\r\n\r\n<Form.Group as={Row} className=\"form-group\">\r\n  <Form.Label column sm=\"2\">\r\n    Nationality\r\n  </Form.Label>\r\n  <Col sm=\"10\">\r\n    <Select \r\n      options={countryOptions} \r\n      isSearchable={true} \r\n      value={selectedCountry}\r\n      onChange={(option) => {\r\n        setSelectedCountry(option);\r\n        setFormData({\r\n          ...formData,\r\n          nationality: option ? option.value : ''\r\n        });\r\n      }}\r\n    />\r\n  </Col>\r\n</Form.Group>\r\n\r\n\r\n<Form.Group as={Row} className=\"form-group\">\r\n    <Form.Label column sm=\"2\">\r\n      Language you use:\r\n    </Form.Label>\r\n    <Col sm=\"10\">\r\n      <Form.Control \r\n        as=\"input\" \r\n        list=\"language\" \r\n        name=\"language\" \r\n        placeholder=\"Up to 3 languages\" \r\n        onChange={handleChange}\r\n        required />\r\n    </Col>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} className=\"form-group\">\r\n      <Form.Label column sm=\"2\">\r\n        Phone number\r\n      </Form.Label>\r\n      <Col sm=\"10\">\r\n        <div className=\"phone-container \">\r\n          <Select \r\n            options={options} \r\n            isSearchable={true} \r\n            value={selectedOption}\r\n            onChange={handleChange}\r\n            className='mb-2 phone_code'\r\n          />\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"phone_number\"\r\n            className=\"form-control mb-3\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n      </Col>\r\n    </Form.Group>\r\n  \r\n    <Form.Group as={Row} className=\"form-group\">\r\n  <h2>Please choose your available class hours in your local time.</h2>\r\n      <Form.Group className=\"timezone-container\">\r\n      {timezones.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"timezone-row\">\r\n          {row.map((timezone, index) => (\r\n            <div key={index} className=\"timezone-item\">\r\n              <Form.Check \r\n                type=\"checkbox\" \r\n                id={timezone} \r\n                name=\"timezones\" \r\n                value={timezone} \r\n                label={timezone} \r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </Form.Group>\r\n  <Form.Label>Please indicate your country of residence with states and city:</Form.Label>\r\n  <Form.Control \r\n  type=\"text\" \r\n  name=\"currentCity\" \r\n  placeholder=\"country / state / city\" \r\n  onChange={handleChange}\r\n/>\r\n</Form.Group>\r\n\r\n\r\n<div className=\"d-flex flex-column align-items-center add-margin\">\r\n  <h3>Do you agree to the terms of our Student Rules?</h3>\r\n  <Form.Check\r\n    style={{ marginTop: '20px' }}\r\n    type=\"checkbox\"\r\n    label=\"Yes, I agree\"\r\n    id=\"termsCheckbox\"\r\n    onChange={handleCheckboxClick}\r\n    checked={isCheckboxChecked}\r\n\r\n    \r\n  />\r\n</div>\r\n\r\n<SignupPopup show={showModal} onHide={() => setShowModal(false)} onAgree={handleAgree} onCancel={handleCancel}/>\r\n\r\n\r\n  <Button type=\"submit\">Submit application</Button>\r\n\r\n  </Form>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}